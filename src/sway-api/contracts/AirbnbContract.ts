/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.97.0
  Forc version: 0.66.4
  Fuel-Core version: 0.40.0
*/

import { Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  AbstractAddress,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
} from 'fuels';

import type { Option, Enum } from "./common";

export enum BookingErrorInput { PropertyBooked = 'PropertyBooked', BookingNotFound = 'BookingNotFound', PropertyNotAvailable = 'PropertyNotAvailable', PropertyNotFound = 'PropertyNotFound' };
export enum BookingErrorOutput { PropertyBooked = 'PropertyBooked', BookingNotFound = 'BookingNotFound', PropertyNotAvailable = 'PropertyNotAvailable', PropertyNotFound = 'PropertyNotFound' };
export enum BookingStateInput { Available = 'Available', Booked = 'Booked', Cancelled = 'Cancelled' };
export enum BookingStateOutput { Available = 'Available', Booked = 'Booked', Cancelled = 'Cancelled' };
export enum CreationErrorInput { BookingDateMustBeInFuture = 'BookingDateMustBeInFuture' };
export enum CreationErrorOutput { BookingDateMustBeInFuture = 'BookingDateMustBeInFuture' };
export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;
export enum PropertyStateInput { Listed = 'Listed', Unlisted = 'Unlisted' };
export enum PropertyStateOutput { Listed = 'Listed', Unlisted = 'Unlisted' };
export enum UserErrorInput { InvalidID = 'InvalidID', UnauthorizedUser = 'UnauthorizedUser', PropertyNotAvailable = 'PropertyNotAvailable' };
export enum UserErrorOutput { InvalidID = 'InvalidID', UnauthorizedUser = 'UnauthorizedUser', PropertyNotAvailable = 'PropertyNotAvailable' };

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type BookingInfoInput = { bookedBy: IdentityInput, bookingFrom: BigNumberish, bookingTo: BigNumberish, status: BookingStateInput, property_id: BigNumberish };
export type BookingInfoOutput = { bookedBy: IdentityOutput, bookingFrom: BN, bookingTo: BN, status: BookingStateOutput, property_id: BN };
export type BookingSuccessfulInput = { booking_id: BigNumberish, bookedBy: IdentityInput, bookingFrom: BigNumberish, bookingTo: BigNumberish };
export type BookingSuccessfulOutput = { booking_id: BN, bookedBy: IdentityOutput, bookingFrom: BN, bookingTo: BN };
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type PropertyImageInput = { image1: string, image2: string };
export type PropertyImageOutput = PropertyImageInput;
export type PropertyInfoInput = { owner: IdentityInput, pincode: BigNumberish, listed: PropertyStateInput, available: BookingStateInput };
export type PropertyInfoOutput = { owner: IdentityOutput, pincode: BN, listed: PropertyStateOutput, available: BookingStateOutput };
export type PropertyListedInput = { owner: IdentityInput, property_info: PropertyInfoInput, property_id: BigNumberish };
export type PropertyListedOutput = { owner: IdentityOutput, property_info: PropertyInfoOutput, property_id: BN };
export type PropertyUnlistedInput = { property_id: BigNumberish };
export type PropertyUnlistedOutput = { property_id: BN };

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "()",
      "concreteTypeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
    },
    {
      "type": "b256",
      "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
    },
    {
      "type": "enum errors::BookingError",
      "concreteTypeId": "c6ada664329e6714bbcae888aa1d2ce183157b42fb7354fc423cf7a9639ae788",
      "metadataTypeId": 2
    },
    {
      "type": "enum errors::CreationError",
      "concreteTypeId": "b9d3180d4d8354fec9d767ca1d4144faf473449f3bb3b9eaaf7cfad767493283",
      "metadataTypeId": 3
    },
    {
      "type": "enum errors::UserError",
      "concreteTypeId": "79552f475635af10ed8c2161c079f2b9b3bbfa38e29b3a584378d0c73d07685b",
      "metadataTypeId": 4
    },
    {
      "type": "enum std::option::Option<struct data_structures::booking_info::BookingInfo>",
      "concreteTypeId": "46f7194445650ca4a7bd865e6ea96c29ee03038cb3996f923b2ed544d8e7b7ce",
      "metadataTypeId": 6,
      "typeArguments": [
        "0f3581824bef0324cc78b5b1c67d790908e7d7ffa349fe48b2482c51c4b2807e"
      ]
    },
    {
      "type": "enum std::option::Option<struct data_structures::property_image::PropertyImage>",
      "concreteTypeId": "ef453b12638085cf4284e7c6dc05ae533370b11adba22428fdef9329d0f55d71",
      "metadataTypeId": 6,
      "typeArguments": [
        "bb4ca7525ca8f1001e5f556cdf59536f6b32dcf21ab3bcd8f8fd695b991066c5"
      ]
    },
    {
      "type": "enum std::option::Option<struct data_structures::property_info::PropertyInfo>",
      "concreteTypeId": "176ce125f5bf05419b81cf7b68271985a4bff4b9ba9d7152cf0210ff8b25118e",
      "metadataTypeId": 6,
      "typeArguments": [
        "2a9024f1a56d5610e8db89f022b81823f431442144a1e00e23e0cee48cc302e8"
      ]
    },
    {
      "type": "struct data_structures::booking_info::BookingInfo",
      "concreteTypeId": "0f3581824bef0324cc78b5b1c67d790908e7d7ffa349fe48b2482c51c4b2807e",
      "metadataTypeId": 8
    },
    {
      "type": "struct data_structures::property_image::PropertyImage",
      "concreteTypeId": "bb4ca7525ca8f1001e5f556cdf59536f6b32dcf21ab3bcd8f8fd695b991066c5",
      "metadataTypeId": 9
    },
    {
      "type": "struct data_structures::property_info::PropertyInfo",
      "concreteTypeId": "2a9024f1a56d5610e8db89f022b81823f431442144a1e00e23e0cee48cc302e8",
      "metadataTypeId": 10
    },
    {
      "type": "struct events::BookingSuccessful",
      "concreteTypeId": "97b8654cfa89ba49f191bf36a843c6c413408a5aa7121ea91ec69124d07222c4",
      "metadataTypeId": 11
    },
    {
      "type": "struct events::PropertyListed",
      "concreteTypeId": "873f2e852bba8f271231850245ba5471992655fb1ff634ba030df0f88f36ea41",
      "metadataTypeId": 12
    },
    {
      "type": "struct events::PropertyUnlisted",
      "concreteTypeId": "73000d22cdd50325954a6d8ba3bdde20fcaa6bf52aee47ab2d0eb87a7784f43e",
      "metadataTypeId": 13
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "enum data_structures::booking_state::BookingState",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "Available",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "Booked",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "Cancelled",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum data_structures::property_state::PropertyState",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "Listed",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "Unlisted",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum errors::BookingError",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "PropertyBooked",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "BookingNotFound",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "PropertyNotAvailable",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "PropertyNotFound",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum errors::CreationError",
      "metadataTypeId": 3,
      "components": [
        {
          "name": "BookingDateMustBeInFuture",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum errors::UserError",
      "metadataTypeId": 4,
      "components": [
        {
          "name": "InvalidID",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "UnauthorizedUser",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "PropertyNotAvailable",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum std::identity::Identity",
      "metadataTypeId": 5,
      "components": [
        {
          "name": "Address",
          "typeId": 14
        },
        {
          "name": "ContractId",
          "typeId": 15
        }
      ]
    },
    {
      "type": "enum std::option::Option",
      "metadataTypeId": 6,
      "components": [
        {
          "name": "None",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "Some",
          "typeId": 7
        }
      ],
      "typeParameters": [
        7
      ]
    },
    {
      "type": "generic T",
      "metadataTypeId": 7
    },
    {
      "type": "struct data_structures::booking_info::BookingInfo",
      "metadataTypeId": 8,
      "components": [
        {
          "name": "bookedBy",
          "typeId": 5
        },
        {
          "name": "bookingFrom",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "bookingTo",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "status",
          "typeId": 0
        },
        {
          "name": "property_id",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct data_structures::property_image::PropertyImage",
      "metadataTypeId": 9,
      "components": [
        {
          "name": "image1",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "image2",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct data_structures::property_info::PropertyInfo",
      "metadataTypeId": 10,
      "components": [
        {
          "name": "owner",
          "typeId": 5
        },
        {
          "name": "pincode",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "listed",
          "typeId": 1
        },
        {
          "name": "available",
          "typeId": 0
        }
      ]
    },
    {
      "type": "struct events::BookingSuccessful",
      "metadataTypeId": 11,
      "components": [
        {
          "name": "booking_id",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "bookedBy",
          "typeId": 5
        },
        {
          "name": "bookingFrom",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "bookingTo",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::PropertyListed",
      "metadataTypeId": 12,
      "components": [
        {
          "name": "owner",
          "typeId": 5
        },
        {
          "name": "property_info",
          "typeId": 10
        },
        {
          "name": "property_id",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::PropertyUnlisted",
      "metadataTypeId": 13,
      "components": [
        {
          "name": "property_id",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 14,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct std::contract_id::ContractId",
      "metadataTypeId": 15,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "property_id",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "bookingFrom",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "bookingTo",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "book",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "pincode",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "image1",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "image2",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ],
      "name": "list_property",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "property_id",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "unlist_property",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "booking_id",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "booking_info",
      "output": "46f7194445650ca4a7bd865e6ea96c29ee03038cb3996f923b2ed544d8e7b7ce",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "property_id",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "get_property_images",
      "output": "ef453b12638085cf4284e7c6dc05ae533370b11adba22428fdef9329d0f55d71",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "property_id",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "property_info",
      "output": "176ce125f5bf05419b81cf7b68271985a4bff4b9ba9d7152cf0210ff8b25118e",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "total_booking",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "total_property_listed",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": "13390072562516710654",
      "concreteTypeId": "b9d3180d4d8354fec9d767ca1d4144faf473449f3bb3b9eaaf7cfad767493283"
    },
    {
      "logId": "14316281739756857108",
      "concreteTypeId": "c6ada664329e6714bbcae888aa1d2ce183157b42fb7354fc423cf7a9639ae788"
    },
    {
      "logId": "8742946235045228304",
      "concreteTypeId": "79552f475635af10ed8c2161c079f2b9b3bbfa38e29b3a584378d0c73d07685b"
    },
    {
      "logId": "10932599476737129033",
      "concreteTypeId": "97b8654cfa89ba49f191bf36a843c6c413408a5aa7121ea91ec69124d07222c4"
    },
    {
      "logId": "9745559268152217383",
      "concreteTypeId": "873f2e852bba8f271231850245ba5471992655fb1ff634ba030df0f88f36ea41"
    },
    {
      "logId": "8286637757495051045",
      "concreteTypeId": "73000d22cdd50325954a6d8ba3bdde20fcaa6bf52aee47ab2d0eb87a7784f43e"
    }
  ],
  "messagesTypes": [],
  "configurables": []
};

const storageSlots: StorageSlot[] = [
  {
    "key": "5e3ff3f51d5ca549ca1a17248cec142d92079f7ee4b619ed31e405e031561f51",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "d0871278b5d10fb0390d22992791927f5da5a77acb4a1fcb90b6cecbd07a46f4",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export class AirbnbContractInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    book: FunctionFragment;
    list_property: FunctionFragment;
    unlist_property: FunctionFragment;
    booking_info: FunctionFragment;
    get_property_images: FunctionFragment;
    property_info: FunctionFragment;
    total_booking: FunctionFragment;
    total_property_listed: FunctionFragment;
  };
}

export class AirbnbContract extends Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: AirbnbContractInterface;
  declare functions: {
    book: InvokeFunction<[property_id: BigNumberish, bookingFrom: BigNumberish, bookingTo: BigNumberish], void>;
    list_property: InvokeFunction<[pincode: BigNumberish, image1: string, image2: string], void>;
    unlist_property: InvokeFunction<[property_id: BigNumberish], void>;
    booking_info: InvokeFunction<[booking_id: BigNumberish], Option<BookingInfoOutput>>;
    get_property_images: InvokeFunction<[property_id: BigNumberish], Option<PropertyImageOutput>>;
    property_info: InvokeFunction<[property_id: BigNumberish], Option<PropertyInfoOutput>>;
    total_booking: InvokeFunction<[], BN>;
    total_property_listed: InvokeFunction<[], BN>;
  };

  constructor(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
